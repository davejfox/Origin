@function gridCalc($colNumber, $totalColumns) {
    @return percentage(($colNumber / $totalColumns));
}

@mixin grid-column($columns:false, $blockGrid:false, $push:false, $pull:false) {

    @if $columns {
        width: gridCalc($columns, $totalColumns);
    }

    @if $push { 
        #{$defaultFloat}: gridCalc($push, $totalColumns); 
        #{$oppositeDirection}: auto; 
    }

    @if $pull { 
        #{$oppositeDirection}: gridCalc($pull, $totalColumns); 
        #{$defaultFloat}: auto; 
    }
}

.row {
    width: 100%;
    margin: 0 auto;
    max-width: ($rowWidth) + px;
    max-width: ($rowWidth / 10) + rem;
    *zoom: 1;

    .row {
        width: auto;
        margin: 0 (-($columnGutter/2) + px);
        margin: 0 (-($columnGutter/2 / 10) + rem);
        max-width: none;
        *zoom: 1; 
    }

    &:after {
        content: " ";
        clear: both;
        display: block;
        width: 100%;
        height: 0;
    }
}

.columns {
    padding: 0 ($columnGutter/2) + px;
    padding: 0 ($columnGutter/2 / 10) + rem;
    position: relative;
    float: $defaultFloat;

    &:last-child {
        float: $oppositeDirection;
    }
}

[class*="block-grid-"] {
    display: block;
    padding: 0;
    margin: 0 (-($columnGutter/2) + px);
    margin: 0 (-($columnGutter/2 / 10) + rem);
}

[class*="block-grid-"]:before, 
[class*="block-grid-"]:after {
    content: " ";
    display: table; 
}

[class*="block-grid-"]:after {
    clear: both; 
}

[class*="block-grid-"] > li {
    display: block;
    height: auto;
    float: left;
    list-style: none;
    margin: 0;
    padding: 0 ($columnGutter/2) + px;
    padding: 0 ($columnGutter/2 / 10) + rem;
}

@mixin gridSize($sizeName, $kickIn) {

    @media only screen and (min-width: (($kickIn + 1) + px)), only screen and (min-width: (($kickIn / 10 + 0.1) + rem)) {

        .#{$sizeName}-text-center {
            text-align: center;
        }

        .#{$sizeName}-text-left {
            text-align: left;
        }

        .#{$sizeName}-text-right {
            text-align: right;
        }

        .columns.#{$sizeName}-centered {
            margin-left: auto;
            margin-right: auto;
            float: none; 
        }

        .columns.#{$sizeName}-uncentered {
            margin-left: 0;
            margin-right: 0;
            float: left;

            &.opposite {
                float: right;
            }
        }

        @for $i from 1 through $totalColumns {
            .#{$sizeName}#{-$i} { @include grid-column($columns:$i); }
        }

        @for $i from 1 through $totalColumns {
            .#{$sizeName}-push#{-$i} { @include grid-column($push:$i); }
        }

        @for $i from 1 through $totalColumns {
            .#{$sizeName}-pull#{-$i} { @include grid-column($pull:$i); }
        }

        @for $i from 1 through $totalColumns {
            .#{$sizeName}-block-grid#{-$i} > li {
                width: (#{100/$i})+("%");
            }

            .#{$sizeName}-block-grid#{-$i} > li:nth-of-type(n) {
                clear: none;   
            }

            .#{$sizeName}-block-grid#{-$i} > li:nth-of-type(#{$i}n+1) {
                clear: both; 
            }
        }
    }
}

//----------------------------------------------------------------
//  Grid Sizes
//----------------------------------------------------------------
// Additional grid sizes can be added here.
@include gridSize("xsmall", $xsmallScreen);
@include gridSize("small", $smallScreen);
@include gridSize("medium", $mediumScreen);

@if $pxSupport == "true" {
    .large-text-center {
        text-align: center;
    }

    .large-text-left {
        text-align: left;
    }

    .large-text-right {
        text-align: right;
    }

    .columns.large-centered {
        margin-left: auto;
        margin-right: auto;
        float: none; 
    }

    .columns.large-uncentered {
        margin-left: 0;
        margin-right: 0;
        float: left;

        &.opposite {
            float: right;
        }
    }

    @for $i from 1 through $totalColumns {
        .large#{-$i} { @include grid-column($columns:$i); }
    }

    @for $i from 1 through $totalColumns {
        .large-push#{-$i} { @include grid-column($push:$i); }
    }

    @for $i from 1 through $totalColumns {
        .large-pull#{-$i} { @include grid-column($pull:$i); }
    }

    @for $i from 1 through $totalColumns {
        .large-block-grid#{-$i} > li {
            width: (#{100/$i})+("%");
        }

        .large-block-grid#{-$i} > li:nth-of-type(n) {
            clear: none;   
        }

        .large-block-grid#{-$i} > li:nth-of-type(#{$i}n+1) {
            clear: both; 
        }
    }
}

@else {
    @include gridSize("large", $largeScreen);
}